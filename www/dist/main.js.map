{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js","webpack:///./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/get.js","webpack:///./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/initializerDefineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/initializerWarningHelper.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeFunction.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/superPropBase.js","webpack:///./node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/wrapNativeSuper.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/lit-element/lib/css-tag.js","webpack:///./node_modules/lit-element/lib/decorators.js","webpack:///./node_modules/lit-element/lib/updating-element.js","webpack:///./node_modules/lit-element/lit-element.js","webpack:///./node_modules/lit-html/directives/class-map.js","webpack:///./node_modules/lit-html/lib/default-template-processor.js","webpack:///./node_modules/lit-html/lib/directive.js","webpack:///./node_modules/lit-html/lib/dom.js","webpack:///./node_modules/lit-html/lib/modify-template.js","webpack:///./node_modules/lit-html/lib/part.js","webpack:///./node_modules/lit-html/lib/parts.js","webpack:///./node_modules/lit-html/lib/render.js","webpack:///./node_modules/lit-html/lib/shady-render.js","webpack:///./node_modules/lit-html/lib/template-factory.js","webpack:///./node_modules/lit-html/lib/template-instance.js","webpack:///./node_modules/lit-html/lib/template-result.js","webpack:///./node_modules/lit-html/lib/template.js","webpack:///./node_modules/lit-html/lit-html.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/constants/colors.ts","webpack:///./src/core.ts","webpack:///./src/detail-view/detail-view.less","webpack:///./src/detail-view/detail-view.template.ts","webpack:///./src/detail-view/detail-view.ts","webpack:///./src/display-gauge/display-gauge.less","webpack:///./src/display-gauge/display-gauge.ts","webpack:///./src/display-line/display-line.less","webpack:///./src/display-line/display-line.ts","webpack:///./src/layout.ts","webpack:///./src/monitor-root/monitor-root-template.ts","webpack:///./src/monitor-root/monitor-root.less","webpack:///./src/monitor-root/monitor-root.ts","webpack:///./src/report-entry/report-entry.less","webpack:///./src/report-entry/report-entry.ts","webpack:///./src/report-list/report-list.less","webpack:///./src/report-list/report-list.ts","webpack:///./src/rest/rest-client.ts","webpack:///./src/server-entry/server-entry.less","webpack:///./src/server-entry/server-entry.ts","webpack:///./src/server-list/server-list.less","webpack:///./src/server-list/server-list.ts"],"names":["Base03","Base02","Base01","Base00","Base0","Base1","Base2","Base3","Yellow","Orange","Red","Magenta","Violet","Blue","Cyan","Green","colorOk","colorNg","colorTick","bgColor","bgColorHighlight","titleTextolor","mainTextolor","secondrayTextolor","Core","MonitorRoot","monitorRoot","self","refresh","setInterval","elem","document","getElementById","classList","contains","add","addEventListener","showSettings","saveSettings","querySelector","remove","clicked","fetchSettings","data","value","fetch","connection","method","headers","body","then","response","e","console","log","requestAnimationFrame","enableSaveButton","json","JSON","stringify","textContent","server","name","children","entry","li","serverName","serverIPs","hasOwnProperty","currentServer","enableSettingsButton","fetchDetails","appendChild","div","text","details","ul","i","length","child","window","core","detailViewTemplate","element","html","failure","success","DetailView","customElement","ReportList","unsafeCSS","listStyle","client","type","Object","Array","monitors","requestUpdate","reportLists","shadowRoot","querySelectorAll","error","lists","LitElement","DisplayGauge","current","max","rebuild","options","makeOptions","undefined","isAttached","gauge","echarts","init","setOption","series","min","splitNumber","radius","axisLine","lineStyle","color","width","shadowColor","shadowBlur","axisLabel","fontWeight","axisTick","splitLine","pointer","title","fontSize","fontStyle","Number","gaugeStyle","DisplayLine","property","values","dates","limit","lineOption","tooltip","trigger","xAxis","show","yAxis","step","x","y","x2","y2","colorStops","offset","global","markLine","silent","span","content","out","createElement","createTextNode","clearElement","hasChildNodes","removeChild","firstChild","parentElement","parentNode","host","String","monitorRootTemplate","rootClient","classMap","half","showDetails","currentClient","currentServerInfo","rootStyle","Boolean","RestClient","webServer","ServerEntrySelectedEvent","event","selectedServer","detail","serverList","detailsView","changeProperties","location","href","split","resolve","detailView","ServerList","ReportEntry","report","visited","handleGauge","keys","map","key","formatKey","handleOthers","left","filter","includes","isGauge","formatGauge","isHistory","formatHistory","isHidden","push","isString","isNumber","formatString","isObject","formatObject","indexOf","parseInt","subList","reportStyle","reports","formatReport","entries","serverState","cluster","clusterStatus","connections","serverNames","sort","servers","status","monitorNames","allOk","monitorName","state","redraw","serverInfo","bubbles","composed","CustomEvent","ServerEntry","entryStyle","monitor","formatMonitor","dispatchEvent","formatServer","getServerState"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2C;;;;;;;;;;;AC7BA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wC;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA,mC;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;;;;;;ACNA,qBAAqB,mBAAO,CAAC,iFAAkB;;AAE/C,+BAA+B,mBAAO,CAAC,qGAA4B;;AAEnE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4B;;;;;;;;;;;ACrBA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8B;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,iC;;;;;;;;;;;ACfA,oBAAoB,mBAAO,CAAC,+EAAiB;;AAE7C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,sB;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;;;;;;ACPA,qBAAqB,mBAAO,CAAC,iFAAkB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,2B;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,4C;;;;;;;;;;;ACVA;AACA;AACA;;AAEA,2C;;;;;;;;;;;ACJA;AACA;AACA;;AAEA,mC;;;;;;;;;;;ACJA;AACA;AACA;AACA;;AAEA;AACA,2EAA2E;AAC3E;AACA,GAAG;AACH;AACA;AACA;;AAEA,2C;;;;;;;;;;;ACbA,cAAc,mBAAO,CAAC,0EAAmB;;AAEzC,4BAA4B,mBAAO,CAAC,+FAAyB;;AAE7D;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4C;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iC;;;;;;;;;;;ACTA,qBAAqB,mBAAO,CAAC,iFAAkB;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gC;;;;;;;;;;;ACXA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,wC;;;;;;;;;;;ACZA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yB;;;;;;;;;;;AChBA,qBAAqB,mBAAO,CAAC,iFAAkB;;AAE/C,qBAAqB,mBAAO,CAAC,iFAAkB;;AAE/C,uBAAuB,mBAAO,CAAC,qFAAoB;;AAEnD,gBAAgB,mBAAO,CAAC,uEAAa;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA,kC;;;;;;;;;;;AC1CA,iBAAiB,mBAAO,CAAC,0EAAqB;;;;;;;;;;;;;ACAjC;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA,4CAA4C,qBAAqB;AACjE;;AAEA;AACA,KAAK;AACL,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,qBAAqB;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;;AAE9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA,C;;;;;;;;;;;;AC7FA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,MAAM;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,mC;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,aAAa;AAC1D;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qBAAqB,qGAAqG;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,yCAAyC,aAAa;AACtD;AACA,SAAS,EAAE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB,SAAS,QAAQ;AAC7E;AACA,mDAAmD,UAAU;AAC7D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;ACrVA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,KAAK;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACboBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC,wBAAwB,IAAI;AAC5B,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;AC7pBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsD;AACM;AAClB;AACN;AACgD;AACrB;AAC9B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,yBAAyB,wEAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2EAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,gDAAgD;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mEAAM;AAC1B,uC;;;;;;;;;;;;ACvMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA,KAAK,SAAS;AACd,qBAAqB;AACrB;AACO,iBAAiB,8DAAS;AACjC,0BAA0B,0DAAa,sBAAsB,yDAAY;AACzE;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,qC;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8G;AAC9G;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2DAAiB;AACnD;AACA;AACA;AACA,wBAAwB,mDAAS;AACjC;AACA;AACA,wBAAwB,8DAAoB;AAC5C;AACA,8BAA8B,4DAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAQ;AAC3B;AACA;AACO;AACP,sD;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAmC,KAAK,QAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACO;AACP;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA,qC;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqD;AACrD,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,WAAW,UAAU,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA,YAAY,yEAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,WAAW,UAAU,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;AC/HA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP,gC;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC6C;AACN;AACO;AACY;AACJ;AACT;AACtC;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB,iDAAQ;AAC9B;AACA;AACA;AACA;AACA,iBAAiB,iEAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAW;AAC1B;AACA,yBAAyB,iDAAQ;AACjC;AACA;AACA,2BAA2B,iDAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iEAAY;AAC3D,6CAA6C,iEAAY;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iEAAY;AACnD,qCAAqC,iEAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iEAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAW;AAC1B;AACA,kCAAkC,iDAAQ;AAC1C;AACA;AACA;AACA,sBAAsB,iDAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gDAAO;AAClC,yBAAyB,gDAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sEAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sEAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAW;AAC1B;AACA,kCAAkC,iDAAQ;AAC1C;AACA;AACA,oCAAoC,iDAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAW;AAC1B;AACA,kCAAkC,iDAAQ;AAC1C;AACA;AACA,oCAAoC,iDAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uDAAuD;AAChE;AACA,iC;;;;;;;;;;;;ACvcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACuC;AACD;AACkB;AACjD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,QAAQ,2DAAW;AACnB,wCAAwC,kDAAQ,gBAAgB,CAAC,qFAAe,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACuC;AACgD;AAC9B;AACF;AACG;AACT;AACU;AAC3D;AACA,oDAAoD,KAAK,IAAI,UAAU;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,wBAAwB,mEAAc;AACtC;AACA;AACA;AACA;AACA;AACA,QAAQ,mEAAc;AACtB;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAc;AACxC;AACA;AACA,uBAAuB,WAAW,UAAU,EAAE;AAC9C;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,mFAAuB;AACvC,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kFAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mFAAuB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,wBAAwB,gDAAK;AAC7B;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,IAAI,yDAAS,yCAAyC,mDAAmD;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gDAAK;AAC1B,QAAQ,gDAAK;AACb;AACA;AACA;AACA;AACA;AACA,+CAA+C,sEAAgB;AAC/D;AACA;AACA;AACA,QAAQ,2DAAW;AACnB;AACA,QAAQ,gDAAK;AACb;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;AC9RA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiD;AACjD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA,uBAAuB,qDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,4C;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACa;AACrD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAY;AACrC;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,mFAAmF,qBAAqB;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yEAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oDAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;ACxIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACyC;AACwD;AACjG,0BAA0B,mDAAM,CAAC;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mEAAsB;AACzD;AACA;AACA;AACA,yDAAyD,MAAM;AAC/D,8BAA8B,MAAM;AACpC;AACA,gEAAgE,uDAAU;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iEAAoB;AAC5D,oBAAoB,mDAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6DAAa;AACrB;AACA;AACA;AACA,2C;;;;;;;;;;;;AChHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kBAAkB,MAAM,iCAAiC;AAChE;AACA;AACA;AACA;AACO,0BAA0B,OAAO;AACjC,kCAAkC,OAAO,GAAG,WAAW;AAC9D;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,0FAA0F,qBAAqB;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB,SAAS,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mDAAmD;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,+BAA+B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0BAA0B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,oC;;;;;;;;;;;;ACtNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AAC+E;AACF;AAC4B;AAC7C;AAC5D;AAC0D;AACR;AACsH;AACxH;AAC4B;AACd;AACe;AACI;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,yCAAyC,sEAAc,0BAA0B,2FAAwB;AAChH;AACA;AACA;AACA;AACO,wCAAwC,yEAAiB,yBAAyB,2FAAwB;AACjH,oC;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/core.ts\");\n","function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nmodule.exports = _applyDecoratedDescriptor;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\n\nmodule.exports = _initializerDefineProperty;","function _initializerWarningHelper(descriptor, context) {\n  throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.');\n}\n\nmodule.exports = _initializerWarningHelper;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nmodule.exports = _taggedTemplateLiteral;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","module.exports = require(\"regenerator-runtime\");\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n *\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the internalProperty decorator.\n *\n * @example\n *\n *     class MyElement {\n *       @property({ type: Boolean })\n *       clicked = false;\n *     }\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @query('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @queryAsync('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n *     // external usage\n *     async doSomethingWithFirst() {\n *      (await aMyElement.first).doSomething();\n *     }\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n *\n *     class MyElement {\n *       @queryAll('div')\n *       divs;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *       clicked = false;\n *\n *       render() {\n *         return html`\n *           <div @click=${this._onClick}`>\n *             <button></button>\n *           </div>\n *         `;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n */\nexport function queryAssignedNodes(slotName = '', flatten = false) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const selector = `slot${slotName ? `[name=${slotName}]` : ''}`;\n                const slot = this.renderRoot.querySelector(selector);\n                return slot && slot.assignedNodes({ flatten });\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        // Initialize to an unresolved Promise so we can make sure the element has\n        // connected before first update.\n        this._updatePromise = new Promise((res) => this._enableUpdatingResolver = res);\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, _options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.3.1');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (userStyles === undefined) {\n            this._styles = [];\n        }\n        else if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = [userStyles];\n        }\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's NodePart - typically a TemplateResult.\n     * Setting properties inside this method will *not* trigger the element to\n     * update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the value to the element's DOM.\n * @param result The value to render.\n * @param container Node into which to render.\n * @param options Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive, PropertyPart } from '../lit-html.js';\n// IE11 doesn't support classList on SVG elements, so we emulate it with a Set\nclass ClassList {\n    constructor(element) {\n        this.classes = new Set();\n        this.changed = false;\n        this.element = element;\n        const classList = (element.getAttribute('class') || '').split(/\\s+/);\n        for (const cls of classList) {\n            this.classes.add(cls);\n        }\n    }\n    add(cls) {\n        this.classes.add(cls);\n        this.changed = true;\n    }\n    remove(cls) {\n        this.classes.delete(cls);\n        this.changed = true;\n    }\n    commit() {\n        if (this.changed) {\n            let classString = '';\n            this.classes.forEach((cls) => classString += cls + ' ');\n            this.element.setAttribute('class', classString);\n        }\n    }\n}\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst previousClassesCache = new WeakMap();\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `class` if the property value is truthy; if the property value is\n * falsey, the property name is removed from the element's `class`. For example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nexport const classMap = directive((classInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'class' || part.committer.parts.length > 1) {\n        throw new Error('The `classMap` directive must be used in the `class` attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { element } = committer;\n    let previousClasses = previousClassesCache.get(part);\n    if (previousClasses === undefined) {\n        // Write static classes once\n        // Use setAttribute() because className isn't a string on SVG elements\n        element.setAttribute('class', committer.strings.join(' '));\n        previousClassesCache.set(part, previousClasses = new Set());\n    }\n    const classList = (element.classList || new ClassList(element));\n    // Remove old classes that no longer apply\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    previousClasses.forEach((name) => {\n        if (!(name in classInfo)) {\n            classList.remove(name);\n            previousClasses.delete(name);\n        }\n    });\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n        const value = classInfo[name];\n        if (value != previousClasses.has(name)) {\n            // We explicitly want a loose truthy check of `value` because it seems\n            // more convenient that '' and 0 are skipped.\n            if (value) {\n                classList.add(name);\n                previousClasses.add(name);\n            }\n            else {\n                classList.remove(name);\n                previousClasses.delete(name);\n            }\n        }\n    }\n    if (typeof classList.commit === 'function') {\n        classList.commit();\n    }\n});\n//# sourceMappingURL=class-map.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.2.1');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","const Base03: string = \"#002b36\";\nconst Base02: string = \"#073642\";\nconst Base01: string = \"#586e75\";\nconst Base00: string = \"#657b83\";\nconst Base0: string = \"#839496\";\nconst Base1: string = \"#93a1a1\";\nconst Base2: string = \"#eee8d5\";\nconst Base3: string = \"#fdf6e3\";\nconst Yellow: string = \"#b58900\";\nconst Orange: string = \"#cb4b16\";\nconst Red: string = \"#dc322f\";\nconst Magenta: string = \"#d33682\";\nconst Violet: string = \"#6c71c4\";\nconst Blue: string = \"#268bd2\";\nconst Cyan: string = \"#2aa198\";\nconst Green: string = \"#859900\";\n\nexport const colorOk: string = Blue;\nexport const colorNg: string = Orange;\nexport const colorTick: string = Cyan;\nexport const bgColor: string = Base03;\nexport const bgColorHighlight: string = Base02;\nexport const titleTextolor: string = Base1;\nexport const mainTextolor: string = Base0;\nexport const secondrayTextolor: string = Base01;\n","import {div, li, text, ul} from \"./layout\";\nimport {formatReports} from \"./report\";\nimport {MonitorRoot} from \"./monitor-root/monitor-root\";\n\ninterface Monitor {\n    name: string;\n    value: boolean\n}\n\ninterface Server {\n    children: Monitor[];\n    name: string;\n}\n\nexport class Core {\n    public dependencies: any[] = [MonitorRoot];\n\n    private serverIPs: { [id: string]: string } = {};\n    private clicked: boolean = false;\n    private connection: string = \"\";\n    private monitorRoot: MonitorRoot;\n\n    public init(monitorRoot: MonitorRoot): void {\n        this.monitorRoot = monitorRoot;\n        const self: Core = this;\n\n        self.monitorRoot.refresh();\n        setInterval(function () {\n            self.monitorRoot.refresh();\n        }, 10_000);\n    }\n\n    private enableSettingsButton(): void {\n        const elem = document.getElementById(\"settings\");\n        if (elem == null) {\n            return;\n        }\n        if (elem.classList.contains(\"active\")) {\n            return;\n        }\n        elem.classList.add(\"active\");\n\n        const self: Core = this;\n        elem.addEventListener(\"click\", function () {\n            self.showSettings();\n        });\n    }\n\n    private enableSaveButton() {\n        const elem = document.getElementById(\"save\");\n        if (elem == null) {\n            return;\n        }\n        if (elem.classList.contains(\"active\")) {\n            return;\n        }\n        elem.classList.add(\"active\");\n\n        const self: Core = this;\n        elem.addEventListener(\"click\", function () {\n            self.saveSettings();\n        });\n    }\n\n    private showSettings() {\n        document.querySelector(\".details\").classList.remove(\"half\");\n        document.querySelector(\".settings\").classList.add(\"half\");\n\n        this.clicked = true;\n        this.fetchSettings();\n    }\n\n    private saveSettings() {\n        this.clicked = true;\n        const data = (<HTMLTextAreaElement>document.querySelector(\".settings > textarea\")).value;\n\n        const self: Core = this;\n        fetch(\"http://\" + this.connection + \"/config?persist=true\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: data\n        }).then((response) => {\n            self.clicked = false;\n        }).catch((e) => {\n            console.log(e);\n            self.clicked = false;\n        });\n    }\n\n\n\n    private fetchSettings() {\n        const self: Core = this;\n        requestAnimationFrame(function () {\n            self.enableSaveButton();\n        });\n        fetch(\"http://\" + this.connection + \"/config\")\n            .then((response) => {\n                return response.json();\n            })\n            .then((response) => {\n                (<HTMLTextAreaElement>document.querySelector(\".settings > textarea\")).value = JSON.stringify(response, null, 4);\n                self.clicked = false;\n\n            })\n            .catch((e) => {\n                document.getElementById(\"failure\").textContent = JSON.stringify(e, null, 4);\n                self.clicked = false;\n            });\n    }\n\n    private createServer(server: Server): void {\n        var name = server.name;\n        var children = server.children;\n        var entry = li();\n        entry.classList.add(\"server\");\n        const self: Core = this;\n        entry.addEventListener(\"click\", function () {\n            if (self.clicked) {\n                return;\n            }\n            document.querySelector(\".details\").classList.remove(\"half\");\n            document.querySelector(\".settings\").classList.remove(\"half\");\n\n            self.clicked = true;\n\n            const serverName = server.name;\n            if (self.serverIPs.hasOwnProperty(serverName)) {\n                self.connection = self.serverIPs[serverName];\n            } else {\n                self.connection = self.currentServer();\n            }\n            document.getElementById(\"server\").textContent = serverName;\n            document.getElementById(\"failure\").textContent = \"Updating, please wait...\";\n            document.getElementById(\"success\").textContent = \"Updating, please wait...\";\n            document.querySelector(\".chart\").classList.add(\"half\");\n            document.querySelector(\".details\").classList.add(\"half\");\n            requestAnimationFrame(function () {\n                self.enableSettingsButton();\n            });\n            self.fetchDetails();\n        });\n\n        entry.appendChild(div(text(name)));\n        var details = ul();\n        entry.appendChild(details);\n        for (var i = 0; i < children.length; i++) {\n            var child = children[i];\n            var elem = li(text(child.name));\n            if (child.value) {\n                elem.classList.add(\"OK\");\n            } else {\n                elem.classList.add(\"NG\")\n            }\n            details.appendChild(elem);\n        }\n    }\n}\n\ndeclare global {\n    interface Window {\n        core: Core;\n    }\n}\n\nwindow.core = new Core();","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host {\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: auto;\\n  padding: 5px;\\n  background-color: #073642;\\n}\\n#server {\\n  color: #93a1a1;\\n  font-size: 20px;\\n  font-weight: bolder;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import {DetailView} from \"./detail-view\";\nimport {html, TemplateResult} from \"lit-element\";\n\nexport function detailViewTemplate(element: DetailView): TemplateResult {\n    return html`\n    <div id=\"server\">${element.server.name}</div>\n    <div id=\"response\">\n        <div id=\"settings\">Settings</div>\n        <report-list class=\"failure\" .reports=\"${element.failure}\"></report-list>\n        <report-list class=\"success\" .reports=\"${element.success}\"></report-list>\n    </div>`;\n}","import {CSSResult, customElement, html, LitElement, TemplateResult, unsafeCSS} from 'lit-element';\nimport listStyle from \"./detail-view.less\";\nimport {RestClient, ServerInfo} from \"../rest/rest-client\";\nimport {Report} from \"../report\";\nimport {ReportList} from \"../report-list/report-list\";\nimport {detailViewTemplate} from \"./detail-view.template\";\n\n@customElement('detail-view')\nexport class DetailView extends LitElement {\n\n    public static get dependencies(): any[] {\n        return [ReportList];\n    }\n\n    public static get styles(): CSSResult {\n        return unsafeCSS(listStyle);\n    }\n\n    static get properties() {\n        return {\n            client: {type: Object},\n            server: {type: Object},\n            success: {type: Array},\n            failure: {type: Array}\n        };\n    }\n\n    public client: RestClient = null;\n    public server: ServerInfo = {name: \"\", monitors: []};\n    public success: Report[] = [];\n    public failure: Report[] = [];\n\n    constructor() {\n        super();\n    }\n\n    public render(): TemplateResult {\n        if (!this.server) {\n            return html``;\n        }\n        return detailViewTemplate(this);\n    }\n\n    public changeProperties(): void {\n        if (this.client) {\n            const self: DetailView = this;\n            this.client.fetchDetails(this)\n                .then(function (): void {\n                    self.requestUpdate().then(function () {\n                        const reportLists: NodeListOf<ReportList> =\n                            self.shadowRoot.querySelectorAll(\"report-list\");\n                        for (let i = 0; i < reportLists.length; i++) {\n                            reportLists[i].refresh();\n                        }\n                    })\n                })\n                .catch(function (error: string | Error) {\n                    console.log(error);\n                });\n        }\n    }\n\n    public async redraw(): Promise<void> {\n        await this.requestUpdate();\n        const lists: NodeListOf<ReportList> = this.shadowRoot.querySelectorAll(\"report-list\");\n        requestAnimationFrame(function () {\n            for (let i = 0; i < lists.length; i++) {\n                lists[i].requestUpdate();\n            }\n        });\n    }\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host {\\n  display: block;\\n}\\n#chart {\\n  position: relative;\\n  width: 270px;\\n  height: 200px;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import {colorNg, colorOk, colorTick} from \"../constants/colors\";\n\nimport {CSSResult, customElement, html, LitElement, TemplateResult, unsafeCSS} from 'lit-element';\nimport gaugeStyle from \"./display-gauge.less\";\nimport {isAttached} from \"../layout\";\n\n@customElement('display-gauge')\nexport class DisplayGauge extends LitElement {\n    public current: number;\n    public max: number;\n\n    constructor(current: number, max: number) {\n        super();\n\n        this.current = current;\n        this.max = max;\n    }\n\n    static get properties() {\n        return {\n            current: {type: Number},\n            max: {type: Number}\n        };\n    }\n\n    public static get styles(): CSSResult {\n        return unsafeCSS(gaugeStyle);\n    }\n\n    public render(): TemplateResult {\n        return html`<div id=\"chart\" class=\"gauge\"></div>`;\n    }\n\n    public attributeChangedCallback(): void {\n        this.rebuild();\n    }\n\n    public connectedCallback(): void {\n        super.connectedCallback();\n        this.rebuild();\n    }\n\n    private rebuild(): void {\n        const options = this.makeOptions();\n        const element: HTMLDivElement | null = this.shadowRoot.querySelector(\"#chart\");\n        const self: DisplayGauge = this;\n\n        if (this.current !== undefined &&\n            this.max !== undefined &&\n            element !== null &&\n            isAttached(this)) {\n            requestAnimationFrame(function () {\n                const gauge = echarts.init(element);\n                gauge.setOption(options);\n            });\n        } else {\n            requestAnimationFrame(function () {\n                self.rebuild();\n            })\n        }\n    }\n\n    private makeOptions() {\n        return {\n            series: [\n                {\n                    type: 'gauge',\n                    min: 0,\n                    max: 100,\n                    splitNumber: 10,\n                    radius: '80%',\n                    axisLine: {\n                        lineStyle: {\n                            color: [[0, colorOk], [this.max / 100, colorOk], [1, colorNg]],\n                            width: 3,\n                            shadowColor: colorTick,\n                            shadowBlur: 10\n                        }\n                    },\n                    axisLabel: {\n                        fontWeight: 'bolder',\n                        color: colorTick,\n                        shadowColor: colorTick,\n                        shadowBlur: 10\n                    },\n                    axisTick: {\n                        length: 15,\n                        lineStyle: {\n                            color: 'auto',\n                            shadowColor: colorTick,\n                            shadowBlur: 10\n                        }\n                    },\n\n                    splitLine: {\n                        length: 10,\n                        lineStyle: {\n                            color: 'auto'\n                        }\n                    },\n                    pointer: {\n                        shadowColor: colorTick,\n                        shadowBlur: 5\n                    },\n                    title: {\n                        fontWeight: 'bolder',\n                        fontSize: 10,\n                        fontStyle: 'italic',\n                        color: colorTick,\n                        shadowColor: colorTick,\n                        shadowBlur: 10\n                    },\n                    data: [{value: this.current}]\n                }\n            ]\n        };\n    }\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host {\\n  display: block;\\n}\\n#chart {\\n  position: relative;\\n  width: 270px;\\n  height: 200px;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import {colorNg, colorOk, colorTick} from \"../constants/colors\";\n\nimport {CSSResult, customElement, html, LitElement, property, TemplateResult, unsafeCSS} from 'lit-element';\nimport lineStyle from \"./display-line.less\";\nimport {isAttached} from \"../layout\";\n\n@customElement('display-line')\nexport class DisplayLine extends LitElement {\n    @property() public values: string[];\n    @property() public dates: string[];\n    @property() public max: number;\n    @property() public limit: number;\n\n    constructor(values: string[], dates: string[], max: number, limit: number) {\n        super();\n\n        this.values = values;\n        this.dates = dates;\n        this.max = max;\n        this.limit = limit;\n    }\n\n    public static get styles(): CSSResult {\n        return unsafeCSS(lineStyle);\n    }\n\n    public render(): TemplateResult {\n        return html`<div id=\"chart\" class=\"gauge\"></div>`;\n    }\n\n    public attributeChangedCallback(): void {\n        this.rebuild();\n    }\n\n    public connectedCallback(): void {\n        super.connectedCallback();\n        this.rebuild();\n    }\n\n    private rebuild(): void {\n        const options: { [id: string]: any } = this.makeOptions();\n        const element: HTMLDivElement | null = this.shadowRoot.querySelector(\"#chart\");\n        const self: DisplayLine = this;\n\n        if (this.values !== undefined &&\n            this.dates !== undefined &&\n            this.max !== undefined &&\n            this.limit !== undefined &&\n            element !== null &&\n            isAttached(this)) {\n            requestAnimationFrame(function () {\n                const gauge = echarts.init(element);\n                gauge.setOption(<any>options);\n            });\n        } else {\n            requestAnimationFrame(function () {\n                self.rebuild();\n            })\n        }\n    }\n\n    private makeOptions(): { [id: string]: any } {\n        const lineOption: { [id: string]: any } = {\n            type: 'line',\n            tooltip: {\n                trigger: 'axis'\n            },\n            axisLabel: {\n                fontWeight: 'bolder',\n                color: colorTick,\n                shadowColor: colorTick,\n                shadowBlur: 10\n            },\n            axisTick: {\n                lineStyle: {\n                    color: 'auto',\n                    shadowColor: colorTick,\n                    shadowBlur: 10\n                }\n            },\n            xAxis: {\n                type: 'category',\n                data: this.dates,\n                axisLabel: {\n                    show: false\n                }\n            },\n            yAxis: {\n                type: 'value',\n                min: 0,\n                max: this.limit\n            },\n            series: {\n                data: this.values,\n                type: 'line',\n                step: true,\n                lineStyle: {\n                    shadowColor: colorTick,\n                    shadowBlur: 10\n                },\n                color: {\n                    type: 'linear',\n                    x: 0,\n                    y: 0,\n                    x2: 0,\n                    y2: 1,\n                    colorStops: [\n                        {\n                            offset: 0, color: colorNg\n                        },\n                        {\n                            offset: 1 - (this.max / 100), color: colorOk\n                        },\n                        {\n                            offset: 1, color: colorOk\n                        }\n                    ],\n                    global: false // false by default\n                },\n                markLine: {\n                    silent: true,\n                    lineStyle: {\n                        color: colorNg,\n                        shadowColor: colorNg,\n                        shadowBlur: 10\n                    },\n                    data: [{\n                        yAxis: this.max\n                    }, {\n                        yAxis: this.limit\n                    }]\n                }\n            },\n            pointer: {\n                shadowColor: colorTick,\n                shadowBlur: 5\n            }\n        };\n\n        if (this.limit === -1) {\n            lineOption.yAxis = {\n                type: 'value'\n            };\n            lineOption.series.color = {\n                type: 'linear',\n                x: 0,\n                y: 0,\n                x2: 0,\n                y2: 1,\n                colorStops: [\n                    {\n                        offset: 0, color: colorNg\n                    },\n                    {\n                        offset: 0.2, color: colorOk\n                    },\n                    {\n                        offset: 1, color: colorOk\n                    }\n                ],\n                global: false // false by default\n            };\n            delete lineOption.series[\"markLine\"];\n        }\n        return lineOption;\n    }\n}","export function span(content?: Node): HTMLSpanElement {\n    const out: HTMLSpanElement = document.createElement(\"span\");\n    if (content !== undefined) {\n        out.appendChild(content);\n    }\n    return out;\n}\n\nexport function div(content?: Node): HTMLDivElement {\n    var out: HTMLDivElement = document.createElement(\"div\");\n    if (content !== undefined) {\n        out.appendChild(content);\n    }\n    return out;\n}\n\nexport function ul(content?: Node): HTMLUListElement {\n    var out: HTMLUListElement = document.createElement(\"ul\");\n    if (content !== undefined) {\n        out.appendChild(content);\n    }\n    return out;\n}\n\nexport function li(content?: Node): HTMLLIElement {\n    const out: HTMLLIElement = document.createElement(\"li\");\n    if (content !== undefined) {\n        out.appendChild(content);\n    }\n    return out;\n}\n\nexport function text(content?: string): Node {\n    return document.createTextNode(content);\n}\n\nexport function clearElement(element: Element): void {\n    while (element.hasChildNodes()) {\n        element.removeChild(element.firstChild);\n    }\n}\n\nexport function isAttached(element: Node): boolean {\n    if (element.parentElement) {\n        return isAttached(element.parentElement);\n    }\n    if (element.parentNode) {\n        return isAttached(element.parentNode);\n    }\n    if ((<ShadowRoot>element).host) {\n        return isAttached((<ShadowRoot>element).host);\n    }\n\n    return String(element) === \"[object HTMLDocument]\";\n}","import {MonitorRoot} from \"./monitor-root\";\nimport {html, TemplateResult} from \"lit-element\";\nimport {classMap} from \"lit-html/directives/class-map\";\n\nexport function monitorRootTemplate(monitorRoot: MonitorRoot): TemplateResult {\n    return html`\n<server-list .client=\"${monitorRoot.rootClient}\" class=\"${classMap({half: monitorRoot.showDetails})}\"></server-list>\n<div class=\"${classMap({details: true, half: monitorRoot.showDetails})}\">\n    <detail-view .client=\"${monitorRoot.currentClient}\" .server=\"${monitorRoot.currentServerInfo}\"></detail-view>\n</div>\n<div class=\"settings\">\n    <div id=\"save\">Save Settings</div>\n    <textarea></textarea>\n</div>`;\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host {\\n  display: block;\\n  background-color: #002b36;\\n  color: #839496;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: hidden;\\n}\\nserver-list {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  padding: 20px;\\n  transition: right 300ms;\\n}\\nserver-list.half {\\n  right: 300px;\\n  overflow: hidden;\\n}\\n.details,\\n.settings {\\n  display: none;\\n  overflow-x: hidden;\\n}\\n.details.half,\\n.settings.half {\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 300px;\\n  bottom: 0;\\n  overflow: auto;\\n  padding: 10px;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import {CSSResult, customElement, LitElement, TemplateResult, unsafeCSS} from 'lit-element';\n\nimport rootStyle from \"./monitor-root.less\";\nimport {RestClient, ServerInfo} from \"../rest/rest-client\";\nimport {ServerList} from \"../server-list/server-list\";\nimport {ServerEntrySelectedEvent} from \"../server-entry/server-entry\";\nimport {DetailView} from \"../detail-view/detail-view\";\nimport {monitorRootTemplate} from \"./monitor-root-template\";\n\n@customElement('monitor-root')\nexport class MonitorRoot extends LitElement {\n\n    public static get styles(): CSSResult {\n        return unsafeCSS(rootStyle);\n    }\n\n    static get properties() {\n        return {\n            showDetails: {type: Boolean},\n            rootClient: {type: Object},\n            currentClient: {type: Object},\n            currentServerInfo: {type: Object}\n        };\n    }\n\n    public showDetails: boolean;\n    public readonly rootClient: RestClient | null;\n    public currentClient: RestClient | null;\n    public currentServerInfo: ServerInfo;\n\n    constructor() {\n        super();\n\n        this.rootClient = new RestClient(this.webServer());\n    }\n\n    public static get dependencies(): any[] {\n        return [ServerList, DetailView];\n    }\n\n    public render(): TemplateResult {\n        return monitorRootTemplate(this);\n    }\n\n    public firstUpdated(): void {\n        const self: MonitorRoot = this;\n        this.addEventListener(ServerEntrySelectedEvent.event, function (event: ServerEntrySelectedEvent) {\n            self.selectedServer(event.detail.server);\n        });\n    }\n\n    public refresh(): void {\n        console.log(\"refreshing\");\n        const serverList: ServerList | null = this.shadowRoot.querySelector(\"server-list\");\n        if (serverList !== null) {\n            console.log(\"refreshing server list\");\n            serverList.refresh();\n        }\n\n        const detailsView: DetailView = this.shadowRoot.querySelector(\".details.half detail-view\");\n        if (detailsView !== null) {\n            console.log(\"refreshing details\");\n            detailsView.changeProperties();\n        }\n    }\n\n    private webServer(): string {\n        return window.location.href.split(\"/www/\")[0];\n    }\n\n    private async selectedServer(server: ServerInfo): Promise<void> {\n        this.showDetails = true;\n\n        const serverList: ServerList | null = this.shadowRoot.querySelector(\"server-list\");\n        this.currentServerInfo = server;\n        this.currentClient = new RestClient(serverList.resolve(server, this.webServer()));\n\n        await this.requestUpdate();\n\n        const detailView: DetailView | null = this.shadowRoot.querySelector(\"detail-view\");\n        if (detailView !== null) {\n            detailView.changeProperties();\n        }\n    }\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host {\\n  display: block;\\n  padding-left: 5px;\\n  margin-left: 5px;\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n}\\n.report-details {\\n  font-family: \\\"monospace\\\";\\n}\\nul {\\n  margin: 0;\\n  padding: 0 0 0 10px;\\n  text-align: left;\\n  list-style-type: disc;\\n}\\nul.report-details {\\n  padding: 0;\\n  list-style-type: none;\\n}\\nli {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n.key {\\n  font-weight: bold;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import {CSSResult, customElement, html, LitElement, property, TemplateResult, unsafeCSS} from 'lit-element';\nimport reportStyle from \"./report-entry.less\";\nimport {Detail, HistoryDetail, Report} from \"../report\";\nimport {DisplayLine} from \"../display-line/display-line\";\nimport {DisplayGauge} from \"../display-gauge/display-gauge\";\n\n@customElement('report-entry')\nexport class ReportEntry extends LitElement {\n    @property()\n    public report: Report;\n\n    private readonly visited: string[] = [];\n\n    constructor(report: Report) {\n        super();\n\n        this.report = report;\n        this.visited.length = 0;\n    }\n\n    public static dependencies(): any[] {\n        return [DisplayLine, DisplayGauge];\n    }\n\n    public static get styles(): CSSResult {\n        return unsafeCSS(reportStyle);\n    }\n\n    public render(): TemplateResult {\n        return html`<div class=\"report-details\">\n            ${this.handleGauge()}\n            ${this.keys().map(key => this.formatKey(key))}\n            ${this.handleOthers()}\n            </div>`;\n    }\n\n    private keys(): string[] {\n        const details: { [id: string]: Detail } = this.report.details;\n        return Object.keys(details);\n    }\n\n    private handleOthers(): TemplateResult {\n        const keys: string[] = this.keys();\n        const left: string[] = keys.filter(key => !this.visited.includes(key));\n        return html`${left.map(key => this.formatKey(key))}`;\n    }\n\n    private handleGauge(): TemplateResult {\n        if (this.isGauge(this.report.details)) {\n            return this.formatGauge(this.report.details);\n        }\n        return html``;\n    }\n\n    private formatKey(key: string): TemplateResult {\n        const details: Detail = this.report.details[key];\n        return html`${\n            this.isHistory(details) ? this.formatHistory(key, <HistoryDetail>details) :\n                this.isHidden(key) ? this.visited.push(key) :\n                    this.isString(details) || this.isNumber(details) ? this.formatString(key, String(details)) :\n                        this.isObject(details) ? this.formatObject(key, details) : \"Dropped \" + key}`;\n    }\n\n    private isGauge(value: Detail): boolean {\n        const keys: string[] = Object.keys(value);\n        return keys.indexOf(\"Current Usage\") !== -1 && keys.indexOf(\"Maximum Usage\") !== -1;\n    }\n\n    private isHistory(value: Detail): boolean {\n        return value.hasOwnProperty(\"type\") && value.type === \"history\";\n    }\n\n    private isHidden(key: string): boolean {\n        return key === \"Do Update\";\n    }\n\n    private isObject(details: Detail): boolean {\n        return String(details) === \"[object Object]\";\n    }\n\n    private isString(details: Detail): boolean {\n        return typeof details === 'string' || details instanceof String;\n    }\n\n    private isNumber(details: Detail): boolean {\n        return typeof details === 'number' || details instanceof Number;\n    }\n\n    private formatHistory(key: string, details: HistoryDetail): TemplateResult {\n        this.visited.push(key);\n        return html`<display-line \n                               .values=\"${details.values}\" \n                               .dates=\"${details.dates}\"\n                               .max=\"${parseInt(details.max)}\"\n                               .limit=\"${parseInt(details.limit)}\"></display-line>`;\n    }\n\n    private formatString(key: string, value: string): TemplateResult {\n        this.visited.push(key);\n        return html`<div><span class=\"key\">${key}: </span><span class=\"value\">${String(value)}</span></div>`;\n    }\n\n    private formatObject(key: string, details: Detail): TemplateResult {\n        this.visited.push(key);\n        const keys: string[] = Object.keys(details);\n        return html`${keys.map(key => this.subList(key, details))}`;\n    }\n\n    private subList(key: string, details: Detail): TemplateResult {\n        return this.formatString(key, details[key]);\n    }\n\n    private formatGauge(details: Detail): TemplateResult {\n        return html`<display-gauge \n                         .current=\"${parseInt((<any>details)[\"Current Usage\"])}\"\n                         .max=\"${parseInt((<any>details)[\"Maximum Usage\"])}\"></display-gauge>`;\n    }\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host {\\n  display: block;\\n}\\nul {\\n  margin: 0;\\n  padding: 0 0 0 10px;\\n  text-align: left;\\n  list-style-type: disc;\\n}\\nli {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n:host(.failure) report-entry {\\n  border-left: 3px solid #cb4b16;\\n}\\n:host(.success) report-entry {\\n  border-left: 3px solid #268bd2;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import {CSSResult, customElement, html, LitElement, property, TemplateResult, unsafeCSS} from 'lit-element';\nimport reportStyle from \"./report-list.less\";\nimport {ReportEntry} from \"../report-entry/report-entry\";\nimport {Report} from \"../report\";\n\n@customElement('report-list')\nexport class ReportList extends LitElement {\n    @property()\n    public reports: Report[];\n\n\n    constructor() {\n        super();\n    }\n\n    public static dependencies(): any[] {\n        return [ReportEntry];\n    }\n\n    public static get styles(): CSSResult {\n        return unsafeCSS(reportStyle);\n    }\n\n    public render(): TemplateResult {\n        return html`${this.reports.map(report => {\n            return this.formatReport(report);\n        })}`;\n    }\n\n    private formatReport(report: Report): TemplateResult {\n        return html`<report-entry .report=\"${report}\"></report-entry>`;\n    }\n\n    public refresh(): void {\n        const entries: NodeListOf<ReportEntry> = this.shadowRoot.querySelectorAll(\"report-entry\");\n        for (let i = 0; i < entries.length; i++) {\n            entries[i].requestUpdate();\n        }\n    }\n}","import {ServerList} from \"../server-list/server-list\";\nimport {Report} from \"../report\";\nimport {DetailView} from \"../detail-view/detail-view\";\n\nexport interface ServerState {\n    [key: string]: boolean;\n}\n\nexport interface ServerStates {\n    clusterStatus: { [id: string]: ServerState };\n    connections: { [id: string]: string };\n}\n\nexport interface SuccessFailureDetail {\n    success: Report[];\n    failure: Report[];\n}\n\nexport interface DetailStatuses {\n    status: SuccessFailureDetail;\n}\n\nexport interface Monitor {\n    name: string;\n    state: boolean;\n}\n\nexport interface ServerInfo {\n    name: string;\n    monitors: Monitor[];\n}\n\nexport class RestClient {\n    private readonly server: string;\n\n    constructor(server: string) {\n        this.server = server;\n    }\n\n    public async getServerState(serverList: ServerList): Promise<void> {\n        const response: Response = await fetch(this.server + \"/status/cluster\");\n        const serverState: ServerStates = await response.json();\n\n        const cluster = serverState.clusterStatus;\n        serverList.serverIPs = serverState.connections;\n\n        const serverNames = Object.keys(cluster);\n        serverNames.sort();\n\n        const servers: ServerInfo[] = [];\n\n        for (const serverName of serverNames) {\n            const status: ServerState = cluster[serverName];\n\n            const monitors: Monitor[] = [];\n            const monitorNames: string[] = Object.keys(status);\n            monitorNames.sort();\n            let allOk = true;\n            for (const monitorName of monitorNames) {\n                const state = status[monitorName];\n                if (!state) {\n                    allOk = false;\n                }\n                monitors.push({\n                    name: monitorName,\n                    state: state\n                });\n            }\n\n            servers.push({\n                name: serverName,\n                monitors: monitors\n            });\n        }\n\n        serverList.servers = servers;\n        await serverList.requestUpdate();\n    }\n\n    public async fetchDetails(detailView: DetailView): Promise<void> {\n        const response: Response = await fetch(\"http://\" + this.server + \"/status\")\n        const status: DetailStatuses = await response.json();\n        detailView.success = status.status.success;\n        detailView.failure = status.status.failure;\n        await detailView.redraw();\n    }\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host {\\n  display: inline-block;\\n  padding: 5px;\\n  background-color: #073642;\\n}\\n:host(:hover) {\\n  cursor: pointer;\\n}\\n:host(.OK) {\\n  border-left: 3px solid #268bd2;\\n}\\n:host(.NG) {\\n  border-left: 3px solid #cb4b16;\\n}\\n.title {\\n  font-size: 20px;\\n  font-weight: bolder;\\n  color: #93a1a1;\\n}\\n.OK {\\n  border-left: 3px solid #268bd2;\\n  padding-left: 5px;\\n}\\n.NG {\\n  border-left: 3px solid #cb4b16;\\n  padding-left: 5px;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import {CSSResult, customElement, html, LitElement, TemplateResult, unsafeCSS} from 'lit-element';\nimport entryStyle from \"./server-entry.less\";\nimport {Monitor, ServerInfo} from \"../rest/rest-client\";\n\nexport interface ServerEntrySelectedEventInfo {\n    server: ServerInfo;\n}\n\nexport class ServerEntrySelectedEvent extends CustomEvent<ServerEntrySelectedEventInfo> {\n    public static get event(): string {\n        return \"server-entry-selected\";\n    }\n\n    constructor(serverInfo: ServerInfo) {\n        super(ServerEntrySelectedEvent.event, {bubbles: true, composed: true, detail: {server: serverInfo}});\n    }\n}\n\n@customElement('server-entry')\nexport class ServerEntry extends LitElement {\n\n    public static get styles(): CSSResult {\n        return unsafeCSS(entryStyle);\n    }\n\n    static get properties() {\n        return {\n            server: {type: Object}\n        };\n    }\n\n    public server: ServerInfo;\n\n    constructor() {\n        super();\n    }\n\n    public render(): TemplateResult {\n        this.classList.add(\"OK\");\n        this.classList.remove(\"NG\");\n        for (const monitor of this.server.monitors) {\n            if (!monitor.state) {\n                this.classList.remove(\"OK\");\n                this.classList.add(\"NG\");\n            }\n        }\n        return html`<div class=\"title\">${this.server.name}</div> ${this.server.monitors.map(monitor => this.formatMonitor(monitor))}`;\n    }\n\n    public firstUpdated(): void {\n        const self: ServerEntry = this;\n        this.addEventListener('click', function () {\n            self.clicked();\n        });\n    }\n\n    private formatMonitor(monitor: Monitor): TemplateResult {\n        return html`<div class=\"${monitor.state ? 'OK' : 'NG'}\">${monitor.name}</div>`;\n    }\n\n    private clicked(): void {\n        this.dispatchEvent(new ServerEntrySelectedEvent(this.server));\n    }\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host {\\n  display: block;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import {CSSResult, customElement, html, LitElement, TemplateResult, unsafeCSS} from 'lit-element';\nimport listStyle from \"./server-list.less\";\nimport {RestClient, ServerInfo} from \"../rest/rest-client\";\nimport {ServerEntry} from \"../server-entry/server-entry\";\n\n@customElement('server-list')\nexport class ServerList extends LitElement {\n    public static get dependencies(): any[] {\n        return [ServerEntry];\n    }\n\n    public static get styles(): CSSResult {\n        return unsafeCSS(listStyle);\n    }\n\n    static get properties() {\n        return {\n            client: {type: Object},\n            servers: {type: Array},\n            serverIPs: {type: Object}\n        };\n    }\n\n    public client: RestClient;\n    public serverIPs: { [id: string]: string };\n    public servers: ServerInfo[] = [];\n\n    constructor() {\n        super();\n    }\n\n    public render(): TemplateResult {\n        return html`${this.servers.map(server => this.formatServer(server))}`;\n    }\n\n    public firstUpdated(): void {\n        this.refresh();\n    }\n\n    public refresh(): void {\n        const self: ServerList = this;\n        this.client.getServerState(this)\n            .then(function (): void {\n                const servers: NodeListOf<ServerEntry> = self.shadowRoot.querySelectorAll(\"server-entry\");\n                for (let i = 0; i < servers.length; i++) {\n                    servers[i].requestUpdate();\n                }\n            })\n            .catch(function (error: string | Error) {\n                console.log(error);\n            });\n    }\n\n    private formatServer(server: ServerInfo): TemplateResult {\n        return html`<server-entry .server=\"${server}\"></server-entry>`;\n    }\n\n    public resolve(server: ServerInfo, currentServer: string): string {\n        if (this.serverIPs.hasOwnProperty(server.name)) {\n            return this.serverIPs[server.name];\n        }\n        return currentServer;\n    }\n}"],"sourceRoot":""}